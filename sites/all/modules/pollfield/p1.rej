--- pollfield.module
+++ pollfield.module
@@ -233,23 +233,22 @@
  *
  */
 function pollfield_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
+  $items[$delta]['poll_features'] = unserialize($items[$delta]['poll_features']);
   $value = isset($items[$delta]['question']) ? $items[$delta]['question'] : '';
 	
   $widget = $element;
   $widget['#delta'] = $delta;
-
   switch ($instance['widget']['type']) {
-
-    case 'pollfield_main':
-			
-			//question 
+    case 'pollfield_main':	
+      //question 
       $widget['question'] = array(
         '#type' => 'textfield',
         '#title' => t('Question'),
         '#default_value'=>$value,
       );
-			//status
-			$admin_pollfield=TRUE;
+			
+      //status
+			$admin_pollfield = TRUE;
 			$_active = array(0 => t('Closed'), 1 => t('Active'));
 		  $widget['active']= array(
 		    '#type' => 'radios',
@@ -260,17 +259,19 @@
 		    '#options' => $_active,
 		    '#description' => t('When a pollfield is closed, visitors can no longer vote for it.')
 		  );
-			 //runtime - duration
-			 $widget['runtime'] = array(
-		    '#type' => 'select',
+			
+      //runtime - duration
+			$widget['runtime'] = array(
+        '#type' => 'select',
 		    '#access' => $admin_pollfield,
 		    '#title' => t('Duration'),
 		    // If no value exists, always default to Unlimited (0)
 		    '#default_value' => isset($items[$delta]['runtime']) ? $items[$delta]['runtime'] : 0,
 		    '#options' => pollfield_duration_options(),
 		    '#description' => t('After this period, the pollfield will be closed automatically.')
-		   );
-			 //anonymous voting
+		  );
+			
+      //anonymous voting
 			$widget['anonymous'] = array(
 		    '#type' => 'select',
 		    '#access' => $admin_pollfield,
@@ -285,23 +286,25 @@
 		    ),
 		    '#description' => t('Allow or disallow anonymous users to vote on this poll. Filtering by user IP or cookie ensures only one vote is allowed per user IP.')
 		  );
-			//cancel permission 
+			
+      //cancel permission 
 			$_cancelvote = array(0 => t('Disallow'), 1 => t('Allow'));
 			$widget['cancelvote_allow'] = array(
 		    '#type' => 'radios',
 		    '#access' => $admin_pollfield,
 		    '#title' => t('Cancel Vote'),
-		    '#default_value' => isset($items[$delta]['cancelvote_allow']) ? $items[$delta]['cancelvote_allow'] : 1,
+		    '#default_value' => isset($items[$delta]['poll_features']['cancelvote_allow']) ? $items[$delta]['poll_features']['cancelvote_allow'] : 1,
 		    '#options' => $_cancelvote,
 		    '#description' => t('Allow or disallow "Cancel vote" button. "Cancel vote" button allows voters to cancel their vote and choose a different one if they want.'),
 		  );
-			//show result befora voting
+			
+      //show result befora voting
 			$_cancelvote = array(0 => t('Disallow'), 1 => t('Allow'));
 		  $widget['result_allow'] = array(
 		    '#type' => 'radios',
 		    '#access' => $admin_pollfield,
 		    '#title' => t('Show results before voting'),
-		    '#default_value' => isset($items[$delta]['cancelvote_allow']) ? $items[$delta]['cancelvote_allow'] : 0,
+		    '#default_value' => isset($items[$delta]['poll_features']['result_allow']) ? $items[$delta]['poll_features']['result_allow'] : 0,
 		    '#options' => $_cancelvote,
 		    '#description' => t('Allow or disallow users to see current poll results before voting on this poll. If set to disallow, anonymous users can never see the results. Permissions under pollfield module override this setting.'),
 		  );
@@ -312,11 +315,12 @@
 		  $widget['poll_type'] = array(
 		    '#type' => 'radios',
 		    '#title' => t('Poll type'),
-		    '#default_value' => isset($poll_type) ? $poll_type : 1,
+		    '#default_value' => isset($items[$delta]['poll_features']['poll_type']) ? $items[$delta]['poll_features']['poll_type'] : 1,
 		    '#options' => $_poll_type,
 		    '#description' => t('In a Single choice poll only one of the responses can be voted for while in a Multiple choice poll it is possible to choose more than one at the same time.'),
 		  );
-			//delete votes from this poll
+			
+      //delete votes from this poll
 			$_delete_votes = array(0 => t('Not delete'), 1 => t('Delete'));
 		  $widget['delete_votes'] = array(
 		    '#type' => 'checkbox',
@@ -331,7 +335,8 @@
 		    '#type' => 'hidden',
 		    '#value' => isset($items[$delta]['poll_features']) ? $items[$delta]['poll_features'] : 0,
 		  );
-			$widget['choice']= array(
+			
+      $widget['choice']= array(
 		    '#type' => 'hidden',
 		    '#value' => isset($items[$delta]['choice']) ? $items[$delta]['choice'] : 0,
 		  );
@@ -343,78 +348,72 @@
 			//ajax wrapper
 			$wrapper = 'ajax-wrapper-pollfield-'.$form_state['node']->nid.'-'.$delta;
 			$field_name = $field['field_name'];
-			
-			if (!isset($form_state['count_choices'])){
+      
+			if(!isset($form_state['count_choices'])){
 				$form_state['count_choices']=$number_of_choices;	
-			}else{
+			} else {
 				$number_of_choices=$form_state['count_choices'];
 			}
-			//forming field definition for form return in ajax
-		 	$form_state['field_name']=$field_name;
 			
+      //forming field definition for form return in ajax
+		 	$form_state['field_name'] = $field_name;
 		  foreach ($form['#node']->$field_name as $lang => $fileds){
 		  	$field_lang=$lang;
 		  }
 			$form_state['field_lang']=$field_lang;
 			$form_state['field_delta']=$delta;
-			
-			
-			
-			
+      
 			$widget['group'] = array(
 	        '#prefix' => '<div id="'.$wrapper.'">',
 	        '#suffix' => '</div>',
 	    );
-			$count_chioces=0;
-			
-			for ($i=0;$i<$number_of_choices+1;$i++){
-				
+      
+			$count_choices=0;
+			for ($i=0; $i<$number_of_choices+1; $i++){
 				if (true){
-					$widget['group'][$count_chioces] = array(
+					$widget['group'][$count_choices] = array(
 		        '#type' => 'fieldset',
 		        '#title' => t('Choice #%delta', array('%delta' => intval($i + 1))),
 		        '#tree' => TRUE,
 		       	'#description' => t('If you want to delete it just delete text from Response textfield.')
 		      );
-					if ($count_chioces<$number_in_data_base){
-						$defaule_value = isset($choices[$i]['choice']) ? $choices[$i]['choice'] : '';
+					
+          if ($count_choices<$number_in_data_base){
+						$default_value = isset($choices[$i]['choice']) ? $choices[$i]['choice'] : '';
 					}
 					else {
-						$defaule_value = '';
+						$default_value = '';
 					}
-		      $widget['group'][$count_chioces]['choice'] = array(
+		      $widget['group'][$count_choices]['choice'] = array(
 		        '#title' => t('Response'),
 		        '#type' => 'textfield',
-		        '#default_value' => $defaule_value,
+		        '#default_value' => $default_value,
 		        '#rows' => 2,
-		        '#weight' => $count_chioces,
-		      
+		        '#weight' => $count_choices,
 		      );
 					
-					if ($count_chioces<$number_in_data_base){
-						$defaule_value = isset($choices[$count_chioces]['votes']) ? $choices[$count_chioces]['votes'] : '';
+					if ($count_choices<$number_in_data_base){
+						$default_value = isset($choices[$count_choices]['votes']) ? $choices[$count_choices]['votes'] : '';
 					}
 					else {
-						$defaule_value = '';
+						$default_value = '';
 					}
-		      $widget['group'][$count_chioces]['votes'] = array(
+		      $widget['group'][$count_choices]['votes'] = array(
 		        '#title' => t('Starting votes count (optional)'),
 		        '#access' => $admin_pollfield,
 		        '#type' => 'textfield',
-		        '#default_value' => $defaule_value,
+		        '#default_value' => $default_value,
 		        '#element_validate' => array('_pollfield_is_digits_validate'),
 		       
 		        '#size' => 10,
-		        '#weight' => $count_chioces+1,
+		        '#weight' => $count_choices+1,
 		      );
 					
-					$count_chioces++;
+					$count_choices++;
 	      }
 			}
-		
-			
 			
-			$widget['add-more'] = array(
+      $widget['add-more'] = array(
 	      '#type' => 'submit',
 	      '#value' => t('More choices'),
 	      '#description' => t("If the amount of boxes above isn't enough, click here to add more choices."),
@@ -431,11 +430,8 @@
 		      // ajax_example_dependent_dropdown for 'event'.
 	     	),
     	);
-			
-			break;
-   
+		break;
   }
-	
 	//question is name of field in field database
   $element['question'] = $widget['question'];
 	$element['active'] = $widget['active'];
@@ -452,18 +448,6 @@
 	$element['choice'] = $widget['choice'];
 	return $element;
 }
-
-/**
- * ajax more choice callback
- */
-function pollfield_more_choice_callback_js($form, $form_state){
-	$field_name = $form_state['field_name'];
-	$field_lang = $form_state['field_lang'];
-	$field_delta = $form_state['field_delta'];
-	$form_choices = $form[$field_name][$field_lang][$field_delta]['group'];
-	
-	return $form_choices;
-}
  
 /**
  * submit more choice callback
